# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.15.0
#: For locally skipping missing interpreters use `tox -s false`
skip_missing_interpreters = False
#: Activate isolated build environment - PEP-517 and PEP-518.
isolated_build = True
#: Application -> True; Library -> False
skipsdist = False

envlist =
    pre-commit
    bandit
    py3{8,7,6}
    coverage
    package


[testenv]
description = basic config env
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    PYTEST_*
    HOME
    CI
    TRAVIS
    TRAVIS_*
download = True


[testenv:pre-commit]
description = format and check the code
passenv =
    SSH_AUTH_SOCK
extras = pre-commit
ignore_errors = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib;print("HINT: run \"\{\} install\" to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}")/"bin"/"pre-commit"))'


[testenv:bandit]
description = run bandit for security checks
deps = bandit >= 1.6.2, < 2
commands = bandit -x ./.tox/*,./venv/*,./.eggs/*,./tests/* -r .


[testenv:py3{8,7,6}]
description = run tests with {basepython}
extras = testing
commands =
    pytest \
    --basetemp="{envtmpdir}" \
    --cov "{envsitepackagesdir}/commit_msg_jira_hook" \
    {posargs:tests}


[testenv:coverage]
description = combine coverage data and create report; generates a diff coverage
              against origin/master (can be changed by setting DIFF_AGAINST env var)
deps =
    coverage[toml]>=5,<6
    diff_cover
skip_install = True
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    pytest
parallel_show_output = True


[testenv:package]
skip_install = True
deps =
    twine
    poetry>=0.12
commands =
    poetry build
    twine check dist/*


[testenv:dev]
skip_install = True
whitelist_externals = poetry
commands =
    poetry install -E "testing pre-commit"
    python -m pip list --format=columns
    python -c "print('PYTHON INTERPRETER LOCATION: ' + r'{envpython}')"


# -- TRAVIS CONFIG ---------------------------------------------------------------------
[travis]
python =
    3.6: py36
    3.7: py37, pre-commit
    3.8: py38, bandit, package


# -- PYTEST CONFIG ---------------------------------------------------------------------
# support for pyproject.toml for 5.5 planned
[pytest]
addopts = -ra --showlocals
mock_use_standalone_module = True
